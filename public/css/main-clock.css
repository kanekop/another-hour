/* public/css/main-clock.css */

/* --- メインクロック全体のコンテナ --- */
.main-clock-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px; /* 各要素間の基本的な間隔 */
  padding: 20px;
  border: 1px solid #ccc;
  border-radius: 8px;
  background: #f0f0f0;
  width: min(90vw, 450px); /* 表示幅を調整 */
  box-sizing: border-box;
  color: #1a1a1a;
}

body.inverted .main-clock-container {
  background: #222;
  border-color: #444;
  color: white;
}

/* --- 都市名表示とタイムゾーン選択 --- */
.timezone-selector-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 5px;
  margin-bottom: 10px;
}

.main-clock-city {
  margin: 0;
  font-size: clamp(1.1em, 3vmin, 1.4em);
  color: #c28000; /* World Clock の都市名の色をイメージ */
  font-weight: bold;
  cursor: pointer; /* クリック可能であることを示す */
}

body.inverted .main-clock-city {
  color: #ffc107; /* ダークモード時の都市名の色 */
}

#timezone-select {
  padding: 8px 12px;
  font-size: clamp(14px, 2.5vmin, 16px);
  width: auto;
  max-width: 90%;
  /* display: none; /* 初期状態はJSで制御 */
}

/* --- AH時間とリアルタイム表示 --- */
#main-ah-time,
#main-normal-time {
  /* components.css の .ah-time-display-main, .normal-time-display-sub のスタイルを期待 */
  /* ここではメインクロック用にフォントサイズなどを上書き調整 */
}

#main-ah-time {
  font-size: clamp(1.2em, 3.5vmin, 1.6em);
  font-weight: bold; /* AH時間は太字にするなど */
}
body.inverted #main-ah-time {
  color: white;
}

#main-normal-time {
  font-size: clamp(0.9em, 2.5vmin, 1.1em);
  color: #555; /* 通常時間は少し薄めに */
}
body.inverted #main-normal-time {
  color: #aaa;
}

/* --- アナログ時計 SVG --- */
#clock {
  width: clamp(250px, 65vmin, 380px); /* デジタル表示とのバランスを見てサイズを決定 */
  height: clamp(250px, 65vmin, 380px);
  margin-top: 10px;
}

/* アナログ時計の盤面 (ライトテーマ時) */
#clock .face { /* セレクタの詳細度を上げることも検討 (例: .main-clock-container #clock .face) */
  fill: #ddd;
  stroke: #bbb;
  stroke-width: 2;
}

/* アナログ時計の針 (ライトテーマ時) */
#clock .hand {
  stroke: black;
  stroke-linecap: round;
  transform-origin: 100px 100px; /* SVGの中心 */
}
#clock .hour { stroke-width: 6; }
#clock .minute { stroke-width: 4; }
#clock .second {
  stroke: #c00000; /* やや暗めの赤 */
  stroke-width: 2;
}

/* 中心のドット (ライトテーマ時) */
#clock .center {
  fill: black;
}

/* 目盛り (ライトテーマ時) */
#clock .tick {
  stroke: #999;
  stroke-width: 1;
}
#clock .tick:not(.major) { /* 小さい刻み */
  stroke: #aaa; /* 少し明るく、または背景とのコントラストを調整 */
}
#clock .tick.major { /* 主要な刻み */
  stroke: #777; /* より濃く */
  stroke-width: 2;
}

/* AHセクター (ライトテーマ時) */
#clock .ah-sector {
  fill: rgba(255, 220, 0, 0.2); /* 黄色系 */
}

/* --- ダークテーマ (body.inverted) 時のアナログ時計スタイル --- */
body.inverted .main-clock-container #clock .face { /* セレクタの詳細度を上げる */
  fill: #222;
  stroke: #444;
}
body.inverted .main-clock-container #clock .hand {
  stroke: white;
}
body.inverted .main-clock-container #clock .second {
  stroke: #ff6b6b; /* 明るい赤 */
}
body.inverted .main-clock-container #clock .center {
  fill: white;
}
body.inverted .main-clock-container #clock .tick {
  stroke: #666;
}
body.inverted .main-clock-container #clock .tick:not(.major) {
  stroke: #555;
}
body.inverted .main-clock-container #clock .tick.major {
  stroke: #888;
}
body.inverted .main-clock-container #clock .ah-sector {
  fill: rgba(255, 255, 0, 0.1);
}


/* --- トグルスイッチのスタイル --- */
/* (これは components.css にあるべきだが、main-clock.css に一時的に置く場合) */
.display-settings-toggle-container {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-top: 15px;
}

.toggle-switch {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 28px;
}

.toggle-switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  transition: .4s;
  border-radius: 28px;
}

.slider:before {
  position: absolute;
  content: "";
  height: 20px;
  width: 20px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  transition: .4s;
  border-radius: 50%;
}

input:checked + .slider {
  background-color: #555; /* ライトモード時のONの色 */
}
body.inverted input:checked + .slider {
  background-color: #777; /* ダークモード時のONの色を調整 */
}

input:focus + .slider {
  box-shadow: 0 0 1px #2196F3; /* フォーカス時のスタイル */
}

input:checked + .slider:before {
  transform: translateX(22px); /* スライダーの移動距離 */
}

.toggle-label {
  font-size: clamp(12px, 2vmin, 14px);
}

/* public/css/main-clock.css */

/* ... 既存のスタイル ... */

#main-ah-time,
#main-normal-time {
  text-align: center; /* 中央揃え */
  width: 100%;       /* 横幅いっぱい */
  margin-bottom: 5px; /* 下マージン */
  font-family: monospace;
}

#main-ah-time {
  font-size: clamp(1.1em, 3vmin, 1.4em); /* World Clockに合わせたフォントサイズ例 */
  font-weight: bold;
  /* color: #1a1a1a; /* 通常時の色 (bodyのcolorを継承) */
}
body.inverted #main-ah-time {
  color: white; /* 反転時の色 */
}

#main-normal-time {
  font-size: clamp(0.8em, 2.2vmin, 1.0em); /* World Clockに合わせたフォントサイズ例 */
  color: #555; /* 通常時は少し薄めに */
}
body.inverted #main-normal-time {
  color: #aaa; /* 反転時はさらに薄めに */
}

/* 既存の #digital-clock スタイルは、これが統合表示エリアとして機能する場合、
   そのまま活かすか、あるいは不要であれば削除またはコメントアウト */
/*
.digital-clock { ... }
*/

/* .hidden クラスは components.css または style.css にある想定 */
.hidden {
  display: none !important;
}